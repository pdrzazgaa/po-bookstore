import { CommonModule } from '@angular/common';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { AngularSvgIconPreloaderConfig } from './angular-svg-icon-preloader-config.class';
import { AngularSvgIconPreloaderService } from './angular-svg-icon-preloader/angular-svg-icon-preloader.service';
import * as i0 from "@angular/core";
export function initConfig(svgSvc) {
    return () => svgSvc.loadConfig();
}
export class AngularSvgIconPreloaderModule {
    static forRoot(config) {
        return {
            ngModule: AngularSvgIconPreloaderModule,
            providers: [
                {
                    provide: AngularSvgIconPreloaderConfig,
                    useValue: config,
                },
                AngularSvgIconPreloaderService,
            ],
        };
    }
}
AngularSvgIconPreloaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: AngularSvgIconPreloaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AngularSvgIconPreloaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.0", ngImport: i0, type: AngularSvgIconPreloaderModule, imports: [CommonModule] });
AngularSvgIconPreloaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: AngularSvgIconPreloaderModule, providers: [
        AngularSvgIconPreloaderService,
        {
            provide: APP_INITIALIZER,
            useFactory: initConfig,
            deps: [AngularSvgIconPreloaderService],
            multi: true,
        },
    ], imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.0", ngImport: i0, type: AngularSvgIconPreloaderModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule],
                    providers: [
                        AngularSvgIconPreloaderService,
                        {
                            provide: APP_INITIALIZER,
                            useFactory: initConfig,
                            deps: [AngularSvgIconPreloaderService],
                            multi: true,
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1zdmctaWNvbi1wcmVsb2FkZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9hbmd1bGFyLXN2Zy1pY29uLXByZWxvYWRlci9zcmMvbGliL2FuZ3VsYXItc3ZnLWljb24tcHJlbG9hZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGVBQWUsRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzFGLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLGlFQUFpRSxDQUFDOztBQUVqSCxNQUFNLFVBQVUsVUFBVSxDQUFDLE1BQXNDO0lBQy9ELE9BQU8sR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQ25DLENBQUM7QUFjRCxNQUFNLE9BQU8sNkJBQTZCO0lBQ3hDLE1BQU0sQ0FBQyxPQUFPLENBQ1osTUFBcUM7UUFFckMsT0FBTztZQUNMLFFBQVEsRUFBRSw2QkFBNkI7WUFDdkMsU0FBUyxFQUFFO2dCQUNUO29CQUNFLE9BQU8sRUFBRSw2QkFBNkI7b0JBQ3RDLFFBQVEsRUFBRSxNQUFNO2lCQUNqQjtnQkFDRCw4QkFBOEI7YUFDL0I7U0FDRixDQUFDO0lBQ0osQ0FBQzs7MEhBZFUsNkJBQTZCOzJIQUE3Qiw2QkFBNkIsWUFYOUIsWUFBWTsySEFXWCw2QkFBNkIsYUFWN0I7UUFDVCw4QkFBOEI7UUFDOUI7WUFDRSxPQUFPLEVBQUUsZUFBZTtZQUN4QixVQUFVLEVBQUUsVUFBVTtZQUN0QixJQUFJLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQztZQUN0QyxLQUFLLEVBQUUsSUFBSTtTQUNaO0tBQ0YsWUFUUyxZQUFZOzJGQVdYLDZCQUE2QjtrQkFaekMsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLFNBQVMsRUFBRTt3QkFDVCw4QkFBOEI7d0JBQzlCOzRCQUNFLE9BQU8sRUFBRSxlQUFlOzRCQUN4QixVQUFVLEVBQUUsVUFBVTs0QkFDdEIsSUFBSSxFQUFFLENBQUMsOEJBQThCLENBQUM7NEJBQ3RDLEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEFQUF9JTklUSUFMSVpFUiwgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuZ3VsYXJTdmdJY29uUHJlbG9hZGVyQ29uZmlnIH0gZnJvbSAnLi9hbmd1bGFyLXN2Zy1pY29uLXByZWxvYWRlci1jb25maWcuY2xhc3MnO1xuaW1wb3J0IHsgQW5ndWxhclN2Z0ljb25QcmVsb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi9hbmd1bGFyLXN2Zy1pY29uLXByZWxvYWRlci9hbmd1bGFyLXN2Zy1pY29uLXByZWxvYWRlci5zZXJ2aWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRDb25maWcoc3ZnU3ZjOiBBbmd1bGFyU3ZnSWNvblByZWxvYWRlclNlcnZpY2UpIHtcbiAgcmV0dXJuICgpID0+IHN2Z1N2Yy5sb2FkQ29uZmlnKCk7XG59XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICBBbmd1bGFyU3ZnSWNvblByZWxvYWRlclNlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxuICAgICAgdXNlRmFjdG9yeTogaW5pdENvbmZpZyxcbiAgICAgIGRlcHM6IFtBbmd1bGFyU3ZnSWNvblByZWxvYWRlclNlcnZpY2VdLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQW5ndWxhclN2Z0ljb25QcmVsb2FkZXJNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdChcbiAgICBjb25maWc6IEFuZ3VsYXJTdmdJY29uUHJlbG9hZGVyQ29uZmlnXG4gICk6IE1vZHVsZVdpdGhQcm92aWRlcnM8QW5ndWxhclN2Z0ljb25QcmVsb2FkZXJNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IEFuZ3VsYXJTdmdJY29uUHJlbG9hZGVyTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBbmd1bGFyU3ZnSWNvblByZWxvYWRlckNvbmZpZyxcbiAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnLFxuICAgICAgICB9LFxuICAgICAgICBBbmd1bGFyU3ZnSWNvblByZWxvYWRlclNlcnZpY2UsXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==