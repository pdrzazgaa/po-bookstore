import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SVG_ICON_REGISTRY_PROVIDER } from './svg-icon-registry.service';
import { SvgIconComponent } from './svg-icon.component';
import { SvgHttpLoader, SvgLoader } from './svg-loader';
import * as i0 from "@angular/core";
export class AngularSvgIconModule {
    static forRoot(config = {}) {
        return {
            ngModule: AngularSvgIconModule,
            providers: [
                SVG_ICON_REGISTRY_PROVIDER,
                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }
            ]
        };
    }
}
AngularSvgIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: AngularSvgIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AngularSvgIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.2", ngImport: i0, type: AngularSvgIconModule, declarations: [SvgIconComponent], imports: [CommonModule], exports: [SvgIconComponent] });
AngularSvgIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: AngularSvgIconModule, imports: [CommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.2", ngImport: i0, type: AngularSvgIconModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                    ],
                    declarations: [
                        SvgIconComponent
                    ],
                    exports: [SvgIconComponent]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1zdmctaWNvbi5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLXN2Zy1pY29uL3NyYy9saWIvYW5ndWxhci1zdmctaWNvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQVksTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsU0FBUyxFQUFFLE1BQU0sY0FBYyxDQUFDOztBQWV4RCxNQUFNLE9BQU8sb0JBQW9CO0lBRWhDLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBK0IsRUFBRTtRQUMvQyxPQUFPO1lBQ04sUUFBUSxFQUFFLG9CQUFvQjtZQUM5QixTQUFTLEVBQUU7Z0JBQ1YsMEJBQTBCO2dCQUMxQixNQUFNLENBQUMsTUFBTSxJQUFJLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFO2FBQ2hFO1NBQ0QsQ0FBQztJQUNILENBQUM7O2lIQVZXLG9CQUFvQjtrSEFBcEIsb0JBQW9CLGlCQUovQixnQkFBZ0IsYUFIaEIsWUFBWSxhQUtGLGdCQUFnQjtrSEFFZixvQkFBb0IsWUFQL0IsWUFBWTsyRkFPRCxvQkFBb0I7a0JBVGhDLFFBQVE7bUJBQUM7b0JBQ1QsT0FBTyxFQUFFO3dCQUNSLFlBQVk7cUJBQ1o7b0JBQ0QsWUFBWSxFQUFFO3dCQUNiLGdCQUFnQjtxQkFDaEI7b0JBQ0QsT0FBTyxFQUFFLENBQUUsZ0JBQWdCLENBQUU7aUJBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5pbXBvcnQgeyBTVkdfSUNPTl9SRUdJU1RSWV9QUk9WSURFUiB9IGZyb20gJy4vc3ZnLWljb24tcmVnaXN0cnkuc2VydmljZSc7XG5pbXBvcnQgeyBTdmdJY29uQ29tcG9uZW50IH0gZnJvbSAnLi9zdmctaWNvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3ZnSHR0cExvYWRlciwgU3ZnTG9hZGVyIH0gZnJvbSAnLi9zdmctbG9hZGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBBbmd1bGFyU3ZnSWNvbkNvbmZpZyB7XG5cdGxvYWRlcj86IFByb3ZpZGVyO1xufVxuXG5ATmdNb2R1bGUoe1xuXHRpbXBvcnRzOiBbXG5cdFx0Q29tbW9uTW9kdWxlLFxuXHRdLFxuXHRkZWNsYXJhdGlvbnM6IFtcblx0XHRTdmdJY29uQ29tcG9uZW50XG5cdF0sXG5cdGV4cG9ydHM6IFsgU3ZnSWNvbkNvbXBvbmVudCBdXG59KVxuZXhwb3J0IGNsYXNzIEFuZ3VsYXJTdmdJY29uTW9kdWxlIHtcblxuXHRzdGF0aWMgZm9yUm9vdChjb25maWc6IEFuZ3VsYXJTdmdJY29uQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEFuZ3VsYXJTdmdJY29uTW9kdWxlPiB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdG5nTW9kdWxlOiBBbmd1bGFyU3ZnSWNvbk1vZHVsZSxcblx0XHRcdHByb3ZpZGVyczogW1xuXHRcdFx0XHRTVkdfSUNPTl9SRUdJU1RSWV9QUk9WSURFUixcblx0XHRcdFx0Y29uZmlnLmxvYWRlciB8fCB7IHByb3ZpZGU6IFN2Z0xvYWRlciwgdXNlQ2xhc3M6IFN2Z0h0dHBMb2FkZXIgfVxuXHRcdFx0XVxuXHRcdH07XG5cdH1cbn1cbiJdfQ==