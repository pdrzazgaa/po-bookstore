{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, SkipSelf, Component, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { of, throwError } from 'rxjs';\nimport { map, tap, catchError, finalize, share } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nconst _c0 = [\"*\"];\n\nclass SvgLoader {}\n\nclass SvgHttpLoader extends SvgLoader {\n  constructor(http) {\n    super();\n    this.http = http;\n  }\n\n  getSvg(url) {\n    return this.http.get(url, {\n      responseType: 'text'\n    });\n  }\n\n}\n\nSvgHttpLoader.ɵfac = function SvgHttpLoader_Factory(t) {\n  return new (t || SvgHttpLoader)(i0.ɵɵinject(i1.HttpClient));\n};\n\nSvgHttpLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SvgHttpLoader,\n  factory: SvgHttpLoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgHttpLoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }];\n  }, null);\n})();\n\nconst SERVER_URL = new InjectionToken('SERVER_URL');\n\nclass SvgIconRegistryService {\n  constructor(loader, platformId, serverUrl, _document) {\n    this.loader = loader;\n    this.platformId = platformId;\n    this.serverUrl = serverUrl;\n    this._document = _document;\n    this.iconsByUrl = new Map();\n    this.iconsLoadingByUrl = new Map();\n    this.document = this._document;\n  }\n  /** Add a SVG to the registry by passing a name and the SVG. */\n\n\n  addSvg(name, data) {\n    if (!this.iconsByUrl.has(name)) {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = data;\n      const svg = div.querySelector('svg');\n      this.iconsByUrl.set(name, svg);\n    }\n  }\n  /** Load a SVG to the registry from a URL. */\n\n\n  loadSvg(url, name = url) {\n    // not sure if there should be a possibility to use name for server usage\n    // so overriding it for now if provided\n    // maybe should separate functionality for url and name use-cases\n    if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n      url = this.serverUrl + url;\n      name = url;\n    }\n\n    if (this.iconsByUrl.has(name)) {\n      return of(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n\n    const o = this.loader.getSvg(url).pipe(map(svg => {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = svg;\n      return div.querySelector('svg');\n    }), tap(svg => this.iconsByUrl.set(name, svg)), catchError(err => {\n      console.error(err);\n      return throwError(err);\n    }), finalize(() => this.iconsLoadingByUrl.delete(name)), share());\n    this.iconsLoadingByUrl.set(name, o);\n    return o;\n  }\n  /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n\n\n  getSvgByName(name) {\n    if (this.iconsByUrl.has(name)) {\n      return of(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n\n    return throwError(`No svg with name '${name}' has been loaded`);\n  }\n  /** Remove a SVG from the registry by URL (or name). */\n\n\n  unloadSvg(url) {\n    if (this.iconsByUrl.has(url)) {\n      this.iconsByUrl.delete(url);\n    }\n  }\n\n}\n\nSvgIconRegistryService.ɵfac = function SvgIconRegistryService_Factory(t) {\n  return new (t || SvgIconRegistryService)(i0.ɵɵinject(SvgLoader), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SERVER_URL, 8), i0.ɵɵinject(DOCUMENT, 8));\n};\n\nSvgIconRegistryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SvgIconRegistryService,\n  factory: SvgIconRegistryService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgIconRegistryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: SvgLoader\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SERVER_URL]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, loader, platformId, serverUrl, document) {\n  return parentRegistry || new SvgIconRegistryService(loader, platformId, serverUrl, document);\n}\n\nconst SVG_ICON_REGISTRY_PROVIDER = {\n  provide: SvgIconRegistryService,\n  deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID], [new Optional(), SERVER_URL], [new Optional(), DOCUMENT]],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\n};\n\nclass SvgIconHelper {\n  constructor() {\n    this.loaded = false;\n  }\n\n}\n\nclass SvgIconComponent {\n  constructor(element, differs, renderer, iconReg, cdr) {\n    this.element = element;\n    this.differs = differs;\n    this.renderer = renderer;\n    this.iconReg = iconReg;\n    this.cdr = cdr;\n    this.stretch = false;\n    this.applyClass = false;\n    /** @deprecated since 9.1.0 */\n\n    this.applyCss = false;\n    this.helper = new SvgIconHelper();\n    this._svgStyle = null;\n  } // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n\n\n  set svgStyle(values) {\n    this._svgStyle = values;\n\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  ngOnChanges(changeRecord) {\n    const elemSvg = this.element.nativeElement.firstChild;\n\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n\n      this.init();\n    }\n\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n\n    if (changeRecord.svgClass) {\n      this.setClass(elemSvg, changeRecord.svgClass.previousValue, changeRecord.svgClass.currentValue);\n    }\n\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(elem, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n\n      if (this.applyClass) {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n\n      this.init();\n    }\n\n    if (changeRecord.applyCss) {\n      console.warn('applyCss deprecated since 9.1.0, will be removed in 10.0.0');\n      console.warn('use applyClass instead');\n    }\n\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      const changes = this.helper.differ.diff(this._svgStyle);\n\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n\n  init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n\n  initSvg(svg) {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n\n  destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n\n    this.helper = new SvgIconHelper();\n  }\n\n  resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n\n  setSvg(svg) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true);\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n      this.copyNgContentAttribute(elem, icon);\n\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n\n      this.stylize(); // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n\n      if (!(this.svgAriaLabel === undefined && elem.firstChild.hasAttribute('aria-label'))) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n\n      this.cdr.markForCheck();\n    }\n  }\n\n  copyNgContentAttribute(hostElem, icon) {\n    const attributes = hostElem.attributes;\n    const len = attributes.length;\n\n    for (let i = 0; i < len; i += 1) {\n      const attribute = attributes.item(i);\n\n      if (attribute && attribute.name.startsWith('_ngcontent')) {\n        this.setNgContentAttribute(icon, attribute.name);\n        break;\n      }\n    }\n  }\n\n  setNgContentAttribute(parent, attributeName) {\n    this.renderer.setAttribute(parent, attributeName, '');\n    const len = parent.childNodes.length;\n\n    for (let i = 0; i < len; i += 1) {\n      const child = parent.childNodes[i];\n\n      if (child instanceof Element) {\n        this.setNgContentAttribute(child, attributeName);\n      }\n    }\n  }\n\n  stylize() {\n    if (this.helper.svg) {\n      const svg = this.element.nativeElement.firstChild;\n\n      if (this.stretch === true) {\n        this.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\n      } else if (this.stretch === false) {\n        this.renderer.removeAttribute(svg, 'preserveAspectRatio');\n      }\n    }\n  }\n\n  applyChanges(changes) {\n    changes.forEachRemovedItem(record => this.setStyle(record.key, null));\n    changes.forEachAddedItem(record => this.setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem(record => this.setStyle(record.key, record.currentValue));\n  }\n\n  setStyle(nameAndUnit, value) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n\n  setClass(target, previous, current) {\n    if (target) {\n      if (previous) {\n        const klasses = (Array.isArray(previous) ? previous : previous.split(' ')).filter(klass => klass);\n\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n\n      if (current) {\n        const klasses = (Array.isArray(current) ? current : current.split(' ')).filter(klass => klass);\n\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n\n  doAria(label) {\n    const svg = this.element.nativeElement.firstChild;\n\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n\n}\n\nSvgIconComponent.ɵfac = function SvgIconComponent_Factory(t) {\n  return new (t || SvgIconComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SvgIconRegistryService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nSvgIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgIconComponent,\n  selectors: [[\"svg-icon\"]],\n  inputs: {\n    src: \"src\",\n    name: \"name\",\n    stretch: \"stretch\",\n    applyClass: \"applyClass\",\n    applyCss: \"applyCss\",\n    svgClass: \"svgClass\",\n    klass: [\"class\", \"klass\"],\n    viewBox: \"viewBox\",\n    svgAriaLabel: \"svgAriaLabel\",\n    svgStyle: \"svgStyle\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function SvgIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'svg-icon',\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: SvgIconRegistryService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    src: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stretch: [{\n      type: Input\n    }],\n    applyClass: [{\n      type: Input\n    }],\n    applyCss: [{\n      type: Input\n    }],\n    svgClass: [{\n      type: Input\n    }],\n    klass: [{\n      type: Input,\n      args: ['class']\n    }],\n    viewBox: [{\n      type: Input\n    }],\n    svgAriaLabel: [{\n      type: Input\n    }],\n    svgStyle: [{\n      type: Input\n    }]\n  });\n})();\n\nclass AngularSvgIconModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: AngularSvgIconModule,\n      providers: [SVG_ICON_REGISTRY_PROVIDER, config.loader || {\n        provide: SvgLoader,\n        useClass: SvgHttpLoader\n      }]\n    };\n  }\n\n}\n\nAngularSvgIconModule.ɵfac = function AngularSvgIconModule_Factory(t) {\n  return new (t || AngularSvgIconModule)();\n};\n\nAngularSvgIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularSvgIconModule\n});\nAngularSvgIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularSvgIconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SvgIconComponent],\n      exports: [SvgIconComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularSvgIconModule, SERVER_URL, SVG_ICON_REGISTRY_PROVIDER, SVG_ICON_REGISTRY_PROVIDER_FACTORY, SvgHttpLoader, SvgIconComponent, SvgIconRegistryService, SvgLoader };","map":{"version":3,"names":["i0","Injectable","InjectionToken","PLATFORM_ID","Inject","Optional","SkipSelf","Component","Input","NgModule","DOCUMENT","CommonModule","of","throwError","map","tap","catchError","finalize","share","i1","SvgLoader","SvgHttpLoader","constructor","http","getSvg","url","get","responseType","ɵfac","HttpClient","ɵprov","type","SERVER_URL","SvgIconRegistryService","loader","platformId","serverUrl","_document","iconsByUrl","Map","iconsLoadingByUrl","document","addSvg","name","data","has","div","createElement","innerHTML","svg","querySelector","set","loadSvg","match","o","pipe","err","console","error","delete","getSvgByName","unloadSvg","Object","decorators","args","undefined","SVG_ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","SVG_ICON_REGISTRY_PROVIDER","provide","deps","useFactory","SvgIconHelper","loaded","SvgIconComponent","element","differs","renderer","iconReg","cdr","stretch","applyClass","applyCss","helper","_svgStyle","svgStyle","values","differ","find","create","ngOnInit","init","ngOnDestroy","destroy","ngOnChanges","changeRecord","elemSvg","nativeElement","firstChild","src","stylize","setClass","klass","svgClass","previousValue","currentValue","elem","viewBox","warn","svgAriaLabel","doAria","ngDoCheck","changes","diff","applyChanges","svgObs","icnSub","subscribe","initSvg","markForCheck","setSvg","resetDiffer","unsubscribe","icon","cloneNode","appendChild","copyNgContentAttribute","w","getAttribute","h","vb","setAttribute","removeAttribute","hasAttribute","hostElem","attributes","len","length","i","attribute","item","startsWith","setNgContentAttribute","parent","attributeName","childNodes","child","Element","forEachRemovedItem","record","setStyle","key","forEachAddedItem","forEachChangedItem","nameAndUnit","value","unit","split","removeStyle","target","previous","current","klasses","Array","isArray","filter","k","removeClass","addClass","label","ElementRef","KeyValueDiffers","Renderer2","ChangeDetectorRef","ɵcmp","selector","template","AngularSvgIconModule","forRoot","config","ngModule","providers","useClass","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/paulina/GitHub/PO-Bookstore/angular-front/node_modules/angular-svg-icon/fesm2020/angular-svg-icon.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, SkipSelf, Component, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { of, throwError } from 'rxjs';\nimport { map, tap, catchError, finalize, share } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\n\nclass SvgLoader {\n}\nclass SvgHttpLoader extends SvgLoader {\n    constructor(http) {\n        super();\n        this.http = http;\n    }\n    getSvg(url) {\n        return this.http.get(url, { responseType: 'text' });\n    }\n}\nSvgHttpLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgHttpLoader, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\nSvgHttpLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgHttpLoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgHttpLoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }]; } });\n\nconst SERVER_URL = new InjectionToken('SERVER_URL');\nclass SvgIconRegistryService {\n    constructor(loader, platformId, serverUrl, _document) {\n        this.loader = loader;\n        this.platformId = platformId;\n        this.serverUrl = serverUrl;\n        this._document = _document;\n        this.iconsByUrl = new Map();\n        this.iconsLoadingByUrl = new Map();\n        this.document = this._document;\n    }\n    /** Add a SVG to the registry by passing a name and the SVG. */\n    addSvg(name, data) {\n        if (!this.iconsByUrl.has(name)) {\n            const div = this.document.createElement('DIV');\n            div.innerHTML = data;\n            const svg = div.querySelector('svg');\n            this.iconsByUrl.set(name, svg);\n        }\n    }\n    /** Load a SVG to the registry from a URL. */\n    loadSvg(url, name = url) {\n        // not sure if there should be a possibility to use name for server usage\n        // so overriding it for now if provided\n        // maybe should separate functionality for url and name use-cases\n        if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n            url = this.serverUrl + url;\n            name = url;\n        }\n        if (this.iconsByUrl.has(name)) {\n            return of(this.iconsByUrl.get(name));\n        }\n        else if (this.iconsLoadingByUrl.has(name)) {\n            return this.iconsLoadingByUrl.get(name);\n        }\n        const o = this.loader.getSvg(url).pipe(map(svg => {\n            const div = this.document.createElement('DIV');\n            div.innerHTML = svg;\n            return div.querySelector('svg');\n        }), tap(svg => this.iconsByUrl.set(name, svg)), catchError(err => {\n            console.error(err);\n            return throwError(err);\n        }), finalize(() => this.iconsLoadingByUrl.delete(name)), share());\n        this.iconsLoadingByUrl.set(name, o);\n        return o;\n    }\n    /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n    getSvgByName(name) {\n        if (this.iconsByUrl.has(name)) {\n            return of(this.iconsByUrl.get(name));\n        }\n        else if (this.iconsLoadingByUrl.has(name)) {\n            return this.iconsLoadingByUrl.get(name);\n        }\n        return throwError(`No svg with name '${name}' has been loaded`);\n    }\n    /** Remove a SVG from the registry by URL (or name). */\n    unloadSvg(url) {\n        if (this.iconsByUrl.has(url)) {\n            this.iconsByUrl.delete(url);\n        }\n    }\n}\nSvgIconRegistryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgIconRegistryService, deps: [{ token: SvgLoader }, { token: PLATFORM_ID }, { token: SERVER_URL, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nSvgIconRegistryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgIconRegistryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgIconRegistryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: SvgLoader }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SERVER_URL]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nfunction SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, loader, platformId, serverUrl, document) {\n    return parentRegistry || new SvgIconRegistryService(loader, platformId, serverUrl, document);\n}\nconst SVG_ICON_REGISTRY_PROVIDER = {\n    provide: SvgIconRegistryService,\n    deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID],\n        [new Optional(), SERVER_URL], [new Optional(), DOCUMENT]\n    ],\n    useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\n};\n\nclass SvgIconHelper {\n    constructor() {\n        this.loaded = false;\n    }\n}\nclass SvgIconComponent {\n    constructor(element, differs, renderer, iconReg, cdr) {\n        this.element = element;\n        this.differs = differs;\n        this.renderer = renderer;\n        this.iconReg = iconReg;\n        this.cdr = cdr;\n        this.stretch = false;\n        this.applyClass = false;\n        /** @deprecated since 9.1.0 */\n        this.applyCss = false;\n        this.helper = new SvgIconHelper();\n        this._svgStyle = null;\n    }\n    // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n    set svgStyle(values) {\n        this._svgStyle = values;\n        if (!this.helper.differ && values) {\n            this.helper.differ = this.differs.find(values).create();\n        }\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    ngOnChanges(changeRecord) {\n        const elemSvg = this.element.nativeElement.firstChild;\n        if (changeRecord.src || changeRecord.name) {\n            if (this.helper.loaded) {\n                this.destroy();\n            }\n            this.init();\n        }\n        if (changeRecord.stretch) {\n            this.stylize();\n        }\n        if (changeRecord.applyClass) {\n            if (this.applyClass) {\n                this.setClass(elemSvg, null, this.klass);\n            }\n            else {\n                this.setClass(elemSvg, this.klass, null);\n            }\n        }\n        if (changeRecord.svgClass) {\n            this.setClass(elemSvg, changeRecord.svgClass.previousValue, changeRecord.svgClass.currentValue);\n        }\n        if (changeRecord.klass) {\n            const elem = this.element.nativeElement;\n            this.setClass(elem, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n            if (this.applyClass) {\n                this.setClass(elemSvg, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n            }\n            else {\n                this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n            }\n        }\n        if (changeRecord.viewBox) {\n            if (this.helper.loaded) {\n                this.destroy();\n            }\n            this.init();\n        }\n        if (changeRecord.applyCss) {\n            console.warn('applyCss deprecated since 9.1.0, will be removed in 10.0.0');\n            console.warn('use applyClass instead');\n        }\n        if (changeRecord.svgAriaLabel) {\n            this.doAria(changeRecord.svgAriaLabel.currentValue);\n        }\n    }\n    ngDoCheck() {\n        if (this.helper.svg && this.helper.differ) {\n            const changes = this.helper.differ.diff(this._svgStyle);\n            if (changes) {\n                this.applyChanges(changes);\n            }\n        }\n    }\n    init() {\n        if (this.name) {\n            const svgObs = this.iconReg.getSvgByName(this.name);\n            if (svgObs) {\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n            }\n        }\n        else if (this.src) {\n            const svgObs = this.iconReg.loadSvg(this.src);\n            if (svgObs) {\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n            }\n        }\n        else {\n            const elem = this.element.nativeElement;\n            elem.innerHTML = '';\n            this.cdr.markForCheck();\n        }\n    }\n    initSvg(svg) {\n        if (!this.helper.loaded && svg) {\n            this.setSvg(svg);\n            this.resetDiffer();\n        }\n    }\n    destroy() {\n        if (this.helper.icnSub) {\n            this.helper.icnSub.unsubscribe();\n        }\n        this.helper = new SvgIconHelper();\n    }\n    resetDiffer() {\n        if (this._svgStyle && !this.helper.differ) {\n            this.helper.differ = this.differs.find(this._svgStyle).create();\n        }\n    }\n    setSvg(svg) {\n        if (!this.helper.loaded && svg) {\n            this.helper.svg = svg;\n            const icon = svg.cloneNode(true);\n            const elem = this.element.nativeElement;\n            elem.innerHTML = '';\n            this.renderer.appendChild(elem, icon);\n            this.helper.loaded = true;\n            this.copyNgContentAttribute(elem, icon);\n            if (this.klass && this.applyClass) {\n                this.setClass(elem.firstChild, null, this.klass);\n            }\n            if (this.svgClass) {\n                this.setClass(elem.firstChild, null, this.svgClass);\n            }\n            if (this.viewBox) {\n                if (this.viewBox === 'auto') {\n                    // Attempt to convert height & width to a viewBox.\n                    const w = icon.getAttribute('width');\n                    const h = icon.getAttribute('height');\n                    if (h && w) {\n                        const vb = `0 0 ${w} ${h}`;\n                        this.renderer.setAttribute(icon, 'viewBox', vb);\n                        this.renderer.removeAttribute(icon, 'width');\n                        this.renderer.removeAttribute(icon, 'height');\n                    }\n                }\n                else if (this.viewBox !== '') {\n                    this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n                    this.renderer.removeAttribute(icon, 'width');\n                    this.renderer.removeAttribute(icon, 'height');\n                }\n            }\n            this.stylize();\n            // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n            // the SVG's aria-label.\n            if (!(this.svgAriaLabel === undefined && elem.firstChild.hasAttribute('aria-label'))) {\n                this.doAria(this.svgAriaLabel || '');\n            }\n            this.cdr.markForCheck();\n        }\n    }\n    copyNgContentAttribute(hostElem, icon) {\n        const attributes = hostElem.attributes;\n        const len = attributes.length;\n        for (let i = 0; i < len; i += 1) {\n            const attribute = attributes.item(i);\n            if (attribute && attribute.name.startsWith('_ngcontent')) {\n                this.setNgContentAttribute(icon, attribute.name);\n                break;\n            }\n        }\n    }\n    setNgContentAttribute(parent, attributeName) {\n        this.renderer.setAttribute(parent, attributeName, '');\n        const len = parent.childNodes.length;\n        for (let i = 0; i < len; i += 1) {\n            const child = parent.childNodes[i];\n            if (child instanceof Element) {\n                this.setNgContentAttribute(child, attributeName);\n            }\n        }\n    }\n    stylize() {\n        if (this.helper.svg) {\n            const svg = this.element.nativeElement.firstChild;\n            if (this.stretch === true) {\n                this.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\n            }\n            else if (this.stretch === false) {\n                this.renderer.removeAttribute(svg, 'preserveAspectRatio');\n            }\n        }\n    }\n    applyChanges(changes) {\n        changes.forEachRemovedItem((record) => this.setStyle(record.key, null));\n        changes.forEachAddedItem((record) => this.setStyle(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this.setStyle(record.key, record.currentValue));\n    }\n    setStyle(nameAndUnit, value) {\n        const [name, unit] = nameAndUnit.split('.');\n        value = value !== null && unit ? `${value}${unit}` : value;\n        const svg = this.element.nativeElement.firstChild;\n        if (value !== null) {\n            this.renderer.setStyle(svg, name, value);\n        }\n        else {\n            this.renderer.removeStyle(svg, name);\n        }\n    }\n    setClass(target, previous, current) {\n        if (target) {\n            if (previous) {\n                const klasses = (Array.isArray(previous) ? previous : previous.split(' ')).filter((klass) => klass);\n                for (const k of klasses) {\n                    this.renderer.removeClass(target, k);\n                }\n            }\n            if (current) {\n                const klasses = (Array.isArray(current) ? current : current.split(' ')).filter((klass) => klass);\n                for (const k of klasses) {\n                    this.renderer.addClass(target, k);\n                }\n            }\n        }\n    }\n    doAria(label) {\n        const svg = this.element.nativeElement.firstChild;\n        if (svg) {\n            if (label === '') {\n                this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n                this.renderer.removeAttribute(svg, 'aria-label');\n            }\n            else {\n                this.renderer.removeAttribute(svg, 'aria-hidden');\n                this.renderer.setAttribute(svg, 'aria-label', label);\n            }\n        }\n    }\n}\nSvgIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgIconComponent, deps: [{ token: i0.ElementRef }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: SvgIconRegistryService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSvgIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.2\", type: SvgIconComponent, selector: \"svg-icon\", inputs: { src: \"src\", name: \"name\", stretch: \"stretch\", applyClass: \"applyClass\", applyCss: \"applyCss\", svgClass: \"svgClass\", klass: [\"class\", \"klass\"], viewBox: \"viewBox\", svgAriaLabel: \"svgAriaLabel\", svgStyle: \"svgStyle\" }, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: SvgIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'svg-icon',\n                    template: '<ng-content></ng-content>'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: SvgIconRegistryService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { src: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stretch: [{\n                type: Input\n            }], applyClass: [{\n                type: Input\n            }], applyCss: [{\n                type: Input\n            }], svgClass: [{\n                type: Input\n            }], klass: [{\n                type: Input,\n                args: ['class']\n            }], viewBox: [{\n                type: Input\n            }], svgAriaLabel: [{\n                type: Input\n            }], svgStyle: [{\n                type: Input\n            }] } });\n\nclass AngularSvgIconModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: AngularSvgIconModule,\n            providers: [\n                SVG_ICON_REGISTRY_PROVIDER,\n                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }\n            ]\n        };\n    }\n}\nAngularSvgIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: AngularSvgIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularSvgIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.2\", ngImport: i0, type: AngularSvgIconModule, declarations: [SvgIconComponent], imports: [CommonModule], exports: [SvgIconComponent] });\nAngularSvgIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: AngularSvgIconModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.2\", ngImport: i0, type: AngularSvgIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                    ],\n                    declarations: [\n                        SvgIconComponent\n                    ],\n                    exports: [SvgIconComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularSvgIconModule, SERVER_URL, SVG_ICON_REGISTRY_PROVIDER, SVG_ICON_REGISTRY_PROVIDER_FACTORY, SvgHttpLoader, SvgIconComponent, SvgIconRegistryService, SvgLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}