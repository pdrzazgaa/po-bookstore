{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport * as i3 from 'angular-svg-icon';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nclass AngularSvgIconPreloaderConfig {\n  constructor() {}\n\n}\n\nclass AngularSvgIconPreloaderService {\n  constructor(_http, config, _iconRegistry) {\n    this._http = _http;\n    this._iconRegistry = _iconRegistry;\n    this.configUrl = './assets/icons.json';\n    this.configSubject = new Subject();\n\n    if (config && config.configUrl) {\n      this.configUrl = config.configUrl;\n    }\n  }\n\n  loadConfig() {\n    return this._http.get(this.configUrl).toPromise().then(configData => {\n      this.iconsFileData = configData;\n      this.loadIcons();\n    }).catch(err => {\n      console.error('An error occurred loading the icons:\\n', err, '\\nNo icons will be loaded.');\n      this.iconsFileData = {\n        customIcons: [],\n        iconImageFiles: []\n      };\n      this.loadIcons();\n    });\n  }\n\n  loadIcons() {\n    this.iconsFileData.iconImageFiles.forEach(i => {\n      this._iconRegistry.loadSvg(i.iconPath, i.iconName).pipe(take(1)).subscribe();\n    });\n    this.iconsFileData.customIcons.forEach(i => {\n      this._iconRegistry.addSvg(i.iconName, i.iconData);\n    });\n  }\n\n}\n\nAngularSvgIconPreloaderService.ɵfac = function AngularSvgIconPreloaderService_Factory(t) {\n  return new (t || AngularSvgIconPreloaderService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(AngularSvgIconPreloaderConfig, 8), i0.ɵɵinject(i3.SvgIconRegistryService));\n};\n\nAngularSvgIconPreloaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AngularSvgIconPreloaderService,\n  factory: AngularSvgIconPreloaderService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularSvgIconPreloaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: AngularSvgIconPreloaderConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i3.SvgIconRegistryService\n    }];\n  }, null);\n})();\n\nfunction initConfig(svgSvc) {\n  return () => svgSvc.loadConfig();\n}\n\nclass AngularSvgIconPreloaderModule {\n  static forRoot(config) {\n    return {\n      ngModule: AngularSvgIconPreloaderModule,\n      providers: [{\n        provide: AngularSvgIconPreloaderConfig,\n        useValue: config\n      }, AngularSvgIconPreloaderService]\n    };\n  }\n\n}\n\nAngularSvgIconPreloaderModule.ɵfac = function AngularSvgIconPreloaderModule_Factory(t) {\n  return new (t || AngularSvgIconPreloaderModule)();\n};\n\nAngularSvgIconPreloaderModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularSvgIconPreloaderModule\n});\nAngularSvgIconPreloaderModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [AngularSvgIconPreloaderService, {\n    provide: APP_INITIALIZER,\n    useFactory: initConfig,\n    deps: [AngularSvgIconPreloaderService],\n    multi: true\n  }],\n  imports: [CommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularSvgIconPreloaderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [AngularSvgIconPreloaderService, {\n        provide: APP_INITIALIZER,\n        useFactory: initConfig,\n        deps: [AngularSvgIconPreloaderService],\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AngularSvgIconPreloaderModule, AngularSvgIconPreloaderService, initConfig };","map":{"version":3,"names":["CommonModule","i0","Injectable","Optional","APP_INITIALIZER","NgModule","i1","i3","Subject","take","AngularSvgIconPreloaderConfig","constructor","AngularSvgIconPreloaderService","_http","config","_iconRegistry","configUrl","configSubject","loadConfig","get","toPromise","then","configData","iconsFileData","loadIcons","catch","err","console","error","customIcons","iconImageFiles","forEach","i","loadSvg","iconPath","iconName","pipe","subscribe","addSvg","iconData","ɵfac","HttpClient","SvgIconRegistryService","ɵprov","type","args","providedIn","decorators","initConfig","svgSvc","AngularSvgIconPreloaderModule","forRoot","ngModule","providers","provide","useValue","ɵmod","ɵinj","useFactory","deps","multi","imports"],"sources":["/Users/paulina/GitHub/PO-Bookstore/angular-front/node_modules/angular-svg-icon-preloader/fesm2020/angular-svg-icon-preloader.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport * as i3 from 'angular-svg-icon';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nclass AngularSvgIconPreloaderConfig {\n    constructor() { }\n}\n\nclass AngularSvgIconPreloaderService {\n    constructor(_http, config, _iconRegistry) {\n        this._http = _http;\n        this._iconRegistry = _iconRegistry;\n        this.configUrl = './assets/icons.json';\n        this.configSubject = new Subject();\n        if (config && config.configUrl) {\n            this.configUrl = config.configUrl;\n        }\n    }\n    loadConfig() {\n        return this._http\n            .get(this.configUrl)\n            .toPromise()\n            .then((configData) => {\n            this.iconsFileData = configData;\n            this.loadIcons();\n        })\n            .catch((err) => {\n            console.error('An error occurred loading the icons:\\n', err, '\\nNo icons will be loaded.');\n            this.iconsFileData = { customIcons: [], iconImageFiles: [] };\n            this.loadIcons();\n        });\n    }\n    loadIcons() {\n        this.iconsFileData.iconImageFiles.forEach((i) => {\n            this._iconRegistry\n                .loadSvg(i.iconPath, i.iconName)\n                .pipe(take(1))\n                .subscribe();\n        });\n        this.iconsFileData.customIcons.forEach((i) => {\n            this._iconRegistry.addSvg(i.iconName, i.iconData);\n        });\n    }\n}\nAngularSvgIconPreloaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderService, deps: [{ token: i1.HttpClient }, { token: AngularSvgIconPreloaderConfig, optional: true }, { token: i3.SvgIconRegistryService }], target: i0.ɵɵFactoryTarget.Injectable });\nAngularSvgIconPreloaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: AngularSvgIconPreloaderConfig, decorators: [{\n                    type: Optional\n                }] }, { type: i3.SvgIconRegistryService }]; } });\n\nfunction initConfig(svgSvc) {\n    return () => svgSvc.loadConfig();\n}\nclass AngularSvgIconPreloaderModule {\n    static forRoot(config) {\n        return {\n            ngModule: AngularSvgIconPreloaderModule,\n            providers: [\n                {\n                    provide: AngularSvgIconPreloaderConfig,\n                    useValue: config,\n                },\n                AngularSvgIconPreloaderService,\n            ],\n        };\n    }\n}\nAngularSvgIconPreloaderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularSvgIconPreloaderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderModule, imports: [CommonModule] });\nAngularSvgIconPreloaderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderModule, providers: [\n        AngularSvgIconPreloaderService,\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initConfig,\n            deps: [AngularSvgIconPreloaderService],\n            multi: true,\n        },\n    ], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: AngularSvgIconPreloaderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [\n                        AngularSvgIconPreloaderService,\n                        {\n                            provide: APP_INITIALIZER,\n                            useFactory: initConfig,\n                            deps: [AngularSvgIconPreloaderService],\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularSvgIconPreloaderModule, AngularSvgIconPreloaderService, initConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}